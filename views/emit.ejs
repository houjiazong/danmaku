<!DOCTYPE html>
<html>
  <head>
    <title>danmaku</title>
    <meta name='viewport' content='width=device-width, initial-scale=1,maximum-scale=1'>
    <link rel="stylesheet" href="/stylesheets/bootstrap.min.css">
    <link rel="stylesheet" href="/stylesheets/danmaku.css">
    <link rel="stylesheet" href="/stylesheets/base.css">
    <style>
      #app {
        padding-top: 20px;
        padding-left: 15px;
        padding-right: 15px;
      }
      .item .label {
        width: 40px;
        float: left;
      }
      .item .content {
        margin-left: 40px;
      }
      .text-right {
        text-align: right;
      }
      .btn {
        width: 100%;
      }
    </style>
  </head>
  <body>
    <div id="app">
      <form>
        <div class="form-group">
          <label>Â§ßÂ∞è</label>
          <select v-model="size" class="form-control">
            <option v-for="item of sizes" :key="item.size" :value="item.size">{{ item.title }}</option>
          </select>
        </div>
        <div class="form-group">
          <label>Á±ªÂûã</label>
          <select v-model="mode" class="form-control">
            <option v-for="item of modes" :key="item.mode" :value="item.mode">{{ item.title }}</option>
          </select>
        </div>
        <div class="form-group">
          <label>È¢úËâ≤</label>
          <select v-model="color" class="form-control">
            <option v-for="item of colors" :key="item.color" :value="item.color">{{ item.title }}</option>
          </select>
        </div>
        <div class="form-group">
          <textarea v-model="val" class="form-control" rows="3" required placeholder="biu ~ Êù•‰∏ÄÂèëÂºπÂπï"></textarea>
        </div>
        <div class="form-group">
          <button class="btn btn-lg btn-primary" @click.prevent="emit">üöÄ ÂèëÂ∞Ñ ‚ú®</button>
        </div>
      </form>
    </div>
    <script src="/javascripts/socket.io.js"></script>
    <script src="/javascripts/vue.min.js"></script>
    <script src="/javascripts/CommentCoreLibrary.js"></script>
    <script>
      const app = new Vue({
        el: '#app',
        data: function () {
          return {
            val: '',
            size: 64,
            mode: 1,
            color: 'ffffff',
            sizes: [
              {
                'size': 64,
                'title': 'ÈùûÂ∏∏Â§ß'
              },
              {
                'size': 45,
                'title': 'ËæÉÂ§ß'
              },
              {
                'size': 36,
                'title': 'Â§ß'
              },
              {
                'size': 25,
                'title': '‰∏≠'
              },
              {
                'size': 18,
                'title': 'Â∞è'
              }
            ],
            modes: [
              {
                'mode': 1,
                'title': 'È°∂Á´ØÊªöÂä®'
              },
              {
                'mode': 2,
                'title': 'Â∫ïÁ´ØÊªöÂä®'
              },
              {
                'mode': 5,
                'title': 'È°∂Á´ØÊ∏êÈöê'
              },
              {
                'mode': 4,
                'title': 'Â∫ïÁ´ØÊ∏êÈöê'
              },
              {
                'mode': 6,
                'title': 'ÈÄÜÂêëÊªöÂä®'
              }
            ],
            colors: [
              {
                'color': 'ffffff',
                'title': 'ÁôΩËâ≤'
              },
              {
                'color': 'C0C0C0',
                'title': 'ÁÅ∞Ëâ≤'
              },
              {
                'color': 'ff0000',
                'title': 'Á∫¢Ëâ≤'
              },
              {
                'color': '00ff00',
                'title': 'ÁªøËâ≤'
              },
              {
                'color': '0000ff',
                'title': 'ËìùËâ≤'
              },
              {
                'color': 'ffff00',
                'title': 'ÈªÑËâ≤'
              },
              {
                'color': '00ffff',
                'title': 'Â¢®Áªø'
              },
              {
                'color': 'ff00ff',
                'title': 'Ê¥ãÁ∫¢'
              }
            ],
            inits: {
              'size': 3,
              'mode': 0,
              'color': 4
            }
          }
        },
        created: function () {
          this.socket = io()
        },
        methods: {
          emit: function () {
            if (this.val.replace(/(^s*)|(s*$)/g, '').length === 0) {
              return
            }
            const danmaku = {
              mode: this.mode,
              text: this.val,
              stime: 0,
              size: this.size,
              color: this.color,
              dur: 10000
            }
            const msg = JSON.stringify(danmaku)
            this.socket.emit('danmaku send', msg)
          }
        }
      })
    </script>
  </body>
</html>
